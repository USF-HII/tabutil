#!/usr/bin/env bash

set -eo pipefail

MYSELF=$0
BASE=$(readlink -f $(dirname ${MYSELF})/..)


set_virtualenv_default() {
  local venv_bin=$1
  local path
  for path in ${VIRTUALENV_PATHS}; do
    if [[ -x ${path} ]]; then
      VIRTUALENV=$(dirname ${path})/${venv_bin}
      [[ -x ${VIRTUALENV} ]] && break
    fi
  done
}

[[ -z ${VIRTUALENV} ]] && set_virtualenv_default

venv=${VENV_DIR:-${BASE}/.venv}

if [[ ${1:-""} == '-r' || ${1:-""} == '--reset' ]]; then
  shift # pop the -r or --reset off the argv variable $@

  if [[ -d ${venv} ]]; then
    echo
    echo /bin/rm -rf ${venv} | /bin/bash -x
  fi
fi

if [[ $1 == '-2' ]]; then
  shift
  VIRTUALENV_PATHS="
    /opt/hii/python/2.7.13/bin/python2.7
    /shares/hii/sw/python/2.7.13/bin/python2.7
    /usr/local/bin/python2.7
    /usr/bin/python2.7
  "
  set_virtualenv_default virtualenv
else
  VIRTUALENV_PATHS="
    /opt/hii/python/3.5.3/bin/python3.5
    /opt/hii/python-3.5.3/bin/python3.5
    /shares/hii/sw/python/3.5.3/bin/python3.5
    /usr/local/bin/python3.5
    /usr/bin/python3.5
  "
  set_virtualenv_default pyvenv
fi


if [[ ! -d ${venv} ]]; then
  echo
  echo ${VIRTUALENV} ${venv} | /bin/bash -x

  echo
  echo ${venv}/bin/pip install --upgrade pip | /bin/bash -x

  if [[ -f ${BASE}/requirements.txt ]]; then
    echo
    echo ${venv}/bin/pip install -r ${BASE}/requirements.txt | /bin/bash -x
  fi
fi

if [[ $# -lt 1 ]]; then
  echo "Usage: ${MYSELF} [-r|--reset] bash|eval|ARGS..." 2>&1
  exit 1
fi

if [[ $1 == 'bash' ]]; then
  bash --init-file <(echo "[[ -f $HOME/.bash_profile ]] && source $HOME/.bash_profile; source ${venv}/bin/activate;")
elif [[ $1 == 'eval' ]]; then
  echo "source ${venv}/bin/activate"
else
  source ${venv}/bin/activate
  "$@"
fi
